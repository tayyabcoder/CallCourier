@{
    ViewData["Title"] = "Shipment Taking Over";
}

<section class="max-w-7xl mx-auto px-3 sm:px-0 lg:px-6 xl:px-8">
    <!-- Card -->
    <div class="bg-white rounded-xl shadow p-6 md:p-8 lg:p-8 xl:p-10 space-y-6">
        <!-- Title -->
        <h2 class="text-xl md:text-2xl font-semibold leading-tight">Shipment Taking Over</h2>
        <div class="mt-2 lg:mt-3 border-t border-gray-200"></div>

        <!-- ===== Form ===== -->
        <form class="space-y-6">
            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 md:gap-6 lg:gap-6 xl:gap-8">
                <!-- Branch -->
                <div>
                    <label for="branch" class="block text-sm font-medium text-slate-700 mb-1">Branch</label>
                    <select id="branch"
                            class="w-full min-h-11 rounded-lg border border-gray-300 px-3 py-2 text-slate-800 bg-white
                                   focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500">
                        <option value="">Select branch</option>
                        <option value="lahore">Lahore</option>
                        <option value="karachi">Karachi</option>
                        <option value="islamabad">Islamabad</option>
                    </select>
                </div>

                <!-- Date -->
                <div>
                    <label for="date" class="block text-sm font-medium text-slate-700 mb-1">Date</label>
                    <input id="date" type="date"
                           class="w-full min-h-11 rounded-lg border border-gray-300 px-3 py-2 text-slate-800
                                  focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500" />
                </div>

                <!-- Sheet No. -->
                <div>
                    <label for="sheetNo" class="block text-sm font-medium text-slate-700 mb-1">Sheet No.</label>
                    <input id="sheetNo" type="text" placeholder="Enter sheet number"
                           class="w-full min-h-11 rounded-lg border border-gray-300 px-3 py-2 text-slate-800 placeholder-gray-400
                                  focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500" />
                </div>

                <!-- Handed Over by -->
                <div>
                    <label for="handedOverBy" class="block text-sm font-medium text-slate-700 mb-1">Handed Over by</label>
                    <input id="handedOverBy" type="text" placeholder="Enter name / ID"
                           class="w-full min-h-11 rounded-lg border border-gray-300 px-3 py-2 text-slate-800 placeholder-gray-400
                                  focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500" />
                </div>

                <!-- Seal No. -->
                <div class="sm:col-span-2 lg:col-span-1">
                    <label for="sealNo" class="block text-sm font-medium text-slate-700 mb-1">Seal No.</label>
                    <input id="sealNo" type="text" value="54541451" disabled
                           class="w-full min-h-11 rounded-lg border border-gray-300 px-3 py-2 bg-gray-100 text-gray-500 cursor-not-allowed" />
                </div>
            </div>

            <!-- ===== CN Details ===== -->
            <div class="grid lg:grid-cols-2 gap-6 lg:gap-8">
                <!-- Table 1 -->
                <div class="bg-white rounded-lg border shadow">
                    <div class="flex items-center justify-between px-4 lg:px-5 pt-4">
                        <h3 class="text-lg font-semibold text-slate-700">CN Detail</h3>
                        <span id="totalReceivable" class="text-xs sm:text-sm font-semibold text-emerald-600">Total Receivable Bags: 0</span>
                    </div>
                    <div class="mt-2 overflow-x-auto rounded-lg">
                        <table class="w-full min-w-[560px] text-left text-sm table-fixed">
                            <thead class="bg-gray-100 text-slate-700">
                                <tr class="border-y border-gray-200 text-xs sm:text-sm">
                                    <th class="py-2.5 lg:py-3 pl-4 lg:pl-5 pr-2">Seal Number</th>
                                    <th class="py-2.5 lg:py-3 px-2 border-l border-gray-200 hidden sm:table-cell">Total CN(s)</th>
                                    <!-- 👇 Date column: mobile par bhi visible -->
                                    <th class="py-2.5 lg:py-3 px-2 border-l border-gray-200 text-xs sm:text-sm">Date</th>
                                </tr>
                            </thead>
                            <tbody id="leftTbody"></tbody>
                        </table>
                    </div>
                </div>

                <!-- Table 2 -->
                <div class="bg-white rounded-lg border shadow">
                    <div class="flex items-center justify-between px-4 lg:px-5 pt-4">
                        <h3 class="text-lg font-semibold text-slate-700">CN Detail</h3>
                        <div class="flex items-center gap-3 text-xs sm:text-sm font-semibold flex-wrap">
                            <span id="shortReceived" class="text-red-600">Short Received Bags: 0</span>
                            <span id="totalReceived" class="text-blue-600">Total Received Bags: 0</span>
                        </div>
                    </div>
                    <div class="mt-2 overflow-x-auto rounded-lg">
                        <table class="w-full min-w-[560px] text-left text-sm table-fixed">
                            <thead class="bg-gray-100 text-slate-700">
                                <tr class="border-y border-gray-200 text-xs sm:text-sm">
                                    <th class="py-2.5 lg:py-3 pl-4 lg:pl-5 pr-2">Seal Number</th>
                                    <th class="py-2.5 lg:py-3 px-2 border-l border-gray-200 hidden sm:table-cell">Total CN(s)</th>
                                    <!-- 👇 Date column: mobile par bhi visible -->
                                    <th class="py-2.5 lg:py-3 px-2 border-l border-gray-200 text-xs sm:text-sm">Date</th>
                                </tr>
                            </thead>
                            <tbody id="rightTbody"></tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Actions -->
            <div class="flex flex-wrap gap-3">
                <button type="submit"
                        class="w-full sm:w-auto inline-flex items-center px-5 py-2.5 lg:px-6 lg:py-2.5 rounded-lg shadow bg-emerald-600 hover:bg-emerald-700 text-white transition">
                    Save
                </button>
                <button type="button"
                        class="w-full sm:w-auto inline-flex items-center px-5 py-2.5 lg:px-6 lg:py-2.5 rounded-lg shadow bg-white border border-gray-300 text-slate-700 hover:bg-gray-50 transition">
                    Close
                </button>
            </div>
        </form>
    </div>
</section>

@section Scripts {
    <script>
        // ---------- MOCK DATA ----------
        const mockShipments = {
          "123": [
            { seal: "45544", cn: "Delivery Phase 2", date: "19/07/2024" },
            { seal: "78",    cn: "Delivery Phase 2", date: "19/07/2024" },
            { seal: "23",    cn: "Delivery Phase 2", date: "19/07/2024" },
            { seal: "67",    cn: "Delivery Phase 2", date: "19/07/2024" },
            { seal: "89",    cn: "Delivery Phase 2", date: "19/07/2024" },
            { seal: "12",    cn: "Delivery Phase 2", date: "19/07/2024" },
          ],
          "54541451": [
            { seal: "1001", cn: "Pickup Run A", date: "21/07/2024" },
            { seal: "1002", cn: "Pickup Run A", date: "21/07/2024" },
            { seal: "1003", cn: "Pickup Run A", date: "21/07/2024" },
          ]
        };

        let currentSheet = null;
        let toReceive = [];
        let received  = [];

        const sheetNoInput = document.getElementById('sheetNo');
        const sealNoInput  = document.getElementById('sealNo');
        const leftTbody  = document.getElementById('leftTbody');
        const rightTbody = document.getElementById('rightTbody');
        const totalReceivableEl = document.getElementById('totalReceivable');
        const totalReceivedEl   = document.getElementById('totalReceived');
        const shortReceivedEl   = document.getElementById('shortReceived');

        function zebraRow(idx){ return idx % 2 ? 'bg-gray-50' : ''; }

        function renderTable(tbody, rows){
          tbody.innerHTML = rows.map((r, i) => `
            <tr class="border-b border-gray-200 ${zebraRow(i)}">
              <td class="py-2.5 lg:py-3 pl-4 lg:pl-5 pr-2 whitespace-nowrap">${r.seal}</td>
              <td class="px-2 hidden sm:table-cell whitespace-nowrap">${r.cn}</td>
              <!-- 👇 Date cell: mobile par bhi visible -->
              <td class="px-2 whitespace-nowrap text-xs sm:text-sm">${r.date}</td>
            </tr>
          `).join('');
        }

        function updateCounters(){
          const remaining = toReceive.length;
          const receivedCount = received.length;
          totalReceivableEl.textContent = `Total Receivable Bags: ${remaining}`;
          totalReceivedEl.textContent   = `Total Received Bags: ${receivedCount}`;
          shortReceivedEl.textContent   = `Short Received Bags: ${remaining}`;
        }

        function resetTables(){
          toReceive = [];
          received  = [];
          renderTable(leftTbody, toReceive);
          renderTable(rightTbody, received);
          updateCounters();
          sealNoInput.value = '';
          sealNoInput.disabled = true;
          sealNoInput.classList.add('bg-gray-100','text-gray-500','cursor-not-allowed');
        }

        function loadSheet(sheetNo){
          const rows = mockShipments[sheetNo];
          if(!rows){ resetTables(); return; }
          currentSheet = sheetNo;
          toReceive = JSON.parse(JSON.stringify(rows));
          received  = [];
          renderTable(leftTbody, toReceive);
          renderTable(rightTbody, received);
          updateCounters();
          sealNoInput.disabled = false;
          sealNoInput.classList.remove('bg-gray-100','cursor-not-allowed');
          sealNoInput.placeholder = "Type seal and press Enter";
          sealNoInput.focus();
        }

        function receiveSeal(seal){
          if(!seal) return;
          if(received.some(r => r.seal === seal)) return;
          const idx = toReceive.findIndex(r => r.seal === seal);
          if(idx === -1) return;
          const row = toReceive.splice(idx,1)[0];
          received.unshift(row);
          renderTable(leftTbody, toReceive);
          renderTable(rightTbody, received);
          updateCounters();
        }

        sheetNoInput.addEventListener('keydown', (e) => {
          if(e.key === 'Enter'){ e.preventDefault(); loadSheet(sheetNoInput.value.trim()); }
        });
        sheetNoInput.addEventListener('blur', () => {
          const val = sheetNoInput.value.trim();
          if(val && val !== currentSheet){ loadSheet(val); }
        });
        sealNoInput.addEventListener('keydown', (e) => {
          if(e.key === 'Enter'){
            e.preventDefault();
            receiveSeal(sealNoInput.value.trim());
            sealNoInput.value = '';
          }
        });

        resetTables();
    </script>
}
